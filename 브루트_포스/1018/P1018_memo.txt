체스판 다시 칠하기

[입력]
첫째 줄에 N과 M이 주어진다. N과 M은 8보다 크거나 같고, 50보다 작거나 같은 자연수이다. 둘째 줄부터 N개의 줄에는 보드의 각 행의 상태가 주어진다. B는 검은색이며, W는 흰색이다.

[출력]
첫째 줄에 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력한다.

[접근]
변수선언
boolean arr[][];
int min = 64;
int N, M

arr[N][M] 입력

for (int i = 0; i < N; i++) { // 행 순회
    for (int j = 0; j < M; j++) { //열 순회
        if (str.charAt(j) == 'W') {
            arr[i][j] = true;
        else
            arr[i][j] = false;

int N_row = N - 7; //가로
int M_col = M - 7; //세로

// 9x9 크기의 경우를 생각하면, 체스판이 8x8 크기 가정이기 때문에 4가지 경우의 패턴을 만들 수 있다
// (0,0) 부터 시작, (1,0) 부터 시작, (0,1) 부터 시작, (1,1) 부터 시작
for (int i = 0; i < N_row; i++) {
    for (int j = 0; j < M_col; j++) {
        find(i, j);
    }
}

출력

public static void find(int x, int y)
    int end_x = x + 8; // x시작점에 8을 더해 x축 끝지점 지정
    int end_y = y + 8; // y시작점에 8을 더해 y축 끝지점 지정
    int count = 0;

    boolean TF = arr[x][y]; 


    // 첫 번째 칸을 기준으로 할 때의 색칠 할 개수(count)와
    // 첫 번째 칸의 색의 반대되는 색을 기준으로 할 때의 색칠 할 개수(64 - count) 중 최솟값을 count 에 저장 

    // 이전까지의 경우 중 최솟값보다 현재 count 값이
    // 더 작을 경우 최솟값을 갱신 