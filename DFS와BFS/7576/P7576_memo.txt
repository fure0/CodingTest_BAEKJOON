토마토

[입력]
첫 줄에는 상자의 크기를 나타내는 두 정수 M,N이 주어진다. M은 상자의 가로 칸의 수, N은 상자의 세로 칸의 수를 나타낸다. 
단, 2 ≤ M,N ≤ 1,000 이다. 둘째 줄부터는 하나의 상자에 저장된 토마토들의 정보가 주어진다. 
즉, 둘째 줄부터 N개의 줄에는 상자에 담긴 토마토의 정보가 주어진다. 
하나의 줄에는 상자 가로줄에 들어있는 토마토의 상태가 M개의 정수로 주어진다. 
정수 1은 익은 토마토, 정수 0은 익지 않은 토마토, 정수 -1은 토마토가 들어있지 않은 칸을 나타낸다.

토마토가 하나 이상 있는 경우만 입력으로 주어진다.

####################################################################################
문제는 보통 가로, 세로로 말하지만, 2차원 배열 입력은 [세로크기][가로크기] 이다.
####################################################################################

[출력]
여러분은 토마토가 모두 익을 때까지의 최소 날짜를 출력해야 한다. 만약, 저장될 때부터 모든 토마토가 익어있는 상태이면 0을 출력해야 하고, 
토마토가 모두 익지는 못하는 상황이면 -1을 출력해야 한다.

[접근법]
변수 선언
M, N
tomatoes[][]
maxVal
dx
dy

n,m으로 2중루프
tomatoes[][] 값입력

########################################################
2차원 배열은 [행][열] 이므로 tomatoes[N][M]; 로 선언
########################################################

queue선언

n,m으로 2중루프
tomatoes[][] == 1 이면 queue에 넣는다

bfs 처리

범위 밖으로 벗어나면 continue
토마토가 없거나, 익은 토마토라면 continue
위 조건들을 만족하지 않는다면 다음 칸 갱신 후 큐에 다음 칸 인덱스 추가

check가 끝난 토마토밭을 돌면서 0이 있는지, 없다면 maxVal은 몇인지 체크 
// 최대 값 - 1 --> 걸린 일수
// 1부터 시작하니까 2 -> 3 ->4 이런식이라 -1 해야된다.

