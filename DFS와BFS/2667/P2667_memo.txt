단지번호붙이기

[입력]
첫 번째 줄에는 지도의 크기 N(정사각형이므로 가로와 세로의 크기는 같으며 5≤N≤25)이 입력되고, 그 다음 N줄에는 각각 N개의 자료(0혹은 1)가 입력된다.
####################################################################################
문제는 보통 가로, 세로로 말하지만, 2차원 배열 입력은 [세로크기(행)][가로크기(열)] 이다.
####################################################################################

[출력]
첫 번째 줄에는 총 단지수를 출력하시오. 그리고 각 단지내 집의 수를 오름차순으로 정렬하여 한 줄에 하나씩 출력하시오.

[접근법]
변수 선언
int map[][]
boolean visit[][]
상하좌우 dx
상하좌우 dy
방문한 단지 그룹 count
지도의 크기 N

지도크기 만큼 2중 for
map에 입력

상하좌우 체크 dfs 정의
    nx, ny 입력
    좌표 범위 확인 (좌표의 범위, N*N 크기이므로 x, y좌표가 0보단 커야하고 N보단 작아야함)
    1이면서 방문하지 않은곳

지도크기 만큼 2중 for
    1이면서, 방문하지 않은
    dfs
    dfs 끝나면 count++

단지수(count) 출력
단지별 수 계산을 위한 배열 선언 int[] arr = new int[count];
지도크기 만큼 2중 for
    if (map[i][j] != 0) {
        arr[map[i][j]]++;

ArraySort로 정렬
각 단지번호 별로 단지수 출력


[팁]

[0.0][0.1][0.2]
[1.0][1.1][1.2]
[2.0][2.1][2.2]

1.1 기준으로
좌(0,-1) 상(-1, 0), 우(0, 1), 하(1, 0)