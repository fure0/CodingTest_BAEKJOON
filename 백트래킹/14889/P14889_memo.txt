스타트와 링크

[입력]
첫째 줄에 N(4 ≤ N ≤ 20, N은 짝수)이 주어진다. 둘째 줄부터 N개의 줄에 S가 주어진다. 
각 줄은 N개의 수로 이루어져 있고, i번 줄의 j번째 수는 Sij 이다. 
Sii는 항상 0이고, 나머지 Sij는 1보다 크거나 같고, 100보다 작거나 같은 정수이다.

[출력]
첫째 줄에 스타트 팀과 링크 팀의 능력치의 차이의 최솟값을 출력한다.

[접근]
변수선언
static int N;
static int[][] map;
static boolean[] visit;
static int Min = Integer.MAX_VALUE;

map = new int[N][N];
visit = new boolean[N]; // 방문 여부

map입력

combi 정의(int idx, int count)
    // 팀 조합이 완성될 경우
    if(count == N / 2) {
        diff();

    for(int i = idx; i < N; i++) {
        if(!visit[i]) {
            visit[i] = true;	// 방문으로 변경
            combi(i + 1, count + 1);	// 재귀 호출
            visit[i] = false;	// 재귀가 끝나면 비방문으로 변경

diff 정의

    for (int i = 0; i < N - 1; i++) {
			for (int j = i + 1; j < N; j++) {


combi(0, 0) 호출
min출력


[힌트]
4
0 1 2 3
4 0 5 6
7 1 0 2
3 4 5 0

idx = 0
count = 0

idx = 1
count = 1

idx = 2
count = 2

[(1, 2), (3, 4)] 의 경우 dfs
-> 0,1 이 true 
i = 0, j = 1  true, true
i = 0, j = 2  true, false
i = 0, j = 3  true, false
i = 1, j = 2  true, false
i = 1, j = 3  true, false
i = 2, j = 3  false, false
----------
idx = 3
count = 2
[(1, 3), (2, 4)] 의 경우 dfs
-> 0,2 이 true
i = 0, j = 1  true, false
i = 0, j = 2  true, true
i = 0, j = 3  true, false
i = 1, j = 2  false, true
i = 1, j = 3  false, false
i = 2, j = 3  true, false
----------
idx = 4
count = 2
[(1, 4), (2, 3)] 의 경우 dfs
-> 0,3 이 true
i = 0, j = 1  true, false
i = 0, j = 2  true, false
i = 0, j = 3  true, true
i = 1, j = 2  false, false
i = 1, j = 3  false, true
i = 2, j = 3  false, true